/*package org.jgrasstools.hortonmachine.modules.hydrogeomorphology.adige;



import org.geotools.coverage.grid.GridCoverage2D;
import org.geotools.data.simple.SimpleFeatureCollection;
import org.jgrasstools.gears.libs.modules.JGTModel;

// Referenced classes of package org.jgrasstools.hortonmachine.modules.hydrogeomorphology.adige:
//            SnowMelting, AdigeModified

public class RRS extends JGTModel {

    public RRS() {
        pathToDem = null;
        pathToSkyview = null;
        pathToSubBasinsCentroidsShape = null;
        pathToHydrometersShape = null;
        pathToNetworkShape = null;
        pathToSubbasinShape = null;
        tStartDate = null;
        tEndDate = null;
        pathToRainfall = null;
        pathToAirTemperature = null;
        centroidsID = null;
        pCmf = -9999D;
        pCff = -9999D;
        pR = -9999D;
        pCr = -9999D;
        pCs = -9999D;
        pTmelt = -9999D;
        pathToPrainOutput = null;
        pathToMeltingOutput = null;
        pathToSweOutput = null;
        doDaily = false;
        doRaster = false;
        pMode = 1;
        pCmax = -9999D;
        pB = -9999D;
        pAlpha = -9999D;
        pRs = -9999D;
        pRq = -9999D;
        pMetp = -9999D;
        pMrain = 1.0D;
        pMelting = 1.0D;
        pQ0 = -9999D;
        pPfafids = null;
        fMonpointid = null;
        fPfaff = null;
        fNetelevstart = null;
        fNetelevend = null;
        timeStepMinutes = -9999;
        fNetnum = null;
        fBaricenter = null;
        pNetNumCali = -9999;
        pathToHydrometers = null;
        pathToEtp = null;
        pathToDischargeOutput = null;
    }

    public void process()
        throws Exception {
        RasterReader readers = new RasterReader();
        readers.file = pathToDem;
        readers.fileNovalue = Double.valueOf(-9999D);
        readers.geodataNovalue = Double.valueOf((0.0D / 0.0D));
        readers.process();
        GridCoverage2D elevationCoverage = readers.outRaster;
        RasterReader readers6 = new RasterReader();
        readers6.file = pathToSkyview;
        readers6.fileNovalue = Double.valueOf(-9999D);
        readers6.geodataNovalue = Double.valueOf((0.0D / 0.0D));
        readers6.process();
        GridCoverage2D skyviewfactor = readers6.outRaster;
        ShapefileFeatureReader stationsReader = new ShapefileFeatureReader();
        stationsReader.file = pathToSubBasinsCentroidsShape;
        stationsReader.readFeatureCollection();
        SimpleFeatureCollection stationsFC = stationsReader.geodata;
        ShapefileFeatureReader hydrometersReader = new ShapefileFeatureReader();
        hydrometersReader.file = pathToHydrometersShape;
        hydrometersReader.readFeatureCollection();
        SimpleFeatureCollection hydrometersFC = hydrometersReader.geodata;
        ShapefileFeatureReader networkReader = new ShapefileFeatureReader();
        networkReader.file = pathToNetworkShape;
        networkReader.readFeatureCollection();
        SimpleFeatureCollection networkFC = networkReader.geodata;
        ShapefileFeatureReader basin5000Reader = new ShapefileFeatureReader();
        basin5000Reader.file = pathToSubbasinShape;
        basin5000Reader.readFeatureCollection();
        SimpleFeatureCollection subbasin5000 = basin5000Reader.geodata;
        String startDate = tStartDate;
        String endDate = tEndDate;
        SnowMelting insolation = new SnowMelting();
        insolation.pathRainf = pathToRainfall;
        insolation.pathTemp = pathToAirTemperature;
        insolation.tStartDate = startDate;
        insolation.tEndDate = endDate;
        insolation.inTimestep = timeStepMinutes;
        insolation.inDem = elevationCoverage;
        insolation.inStations = stationsFC;
        insolation.fStationsid = centroidsID;
        insolation.inSkyview = skyviewfactor;
        insolation.pCmf = pCmf;
        insolation.pCff = pCff;
        insolation.pR = pR;
        insolation.pCr = pCr;
        insolation.pCs = pCs;
        insolation.pTmelt = pTmelt;
        insolation.doDaily = doDaily;
        insolation.doRaster = doRaster;
        insolation.pMode = pMode;
        insolation.pathToPrainOutput = pathToPrainOutput;
        insolation.pathToMelting = pathToMeltingOutput;
        insolation.pathToSwe = pathToSweOutput;
        insolation.process();
        AdigeModified adige = new AdigeModified();
        adige.pCmax = Double.valueOf(pCmax);
        adige.pB = Double.valueOf(pB);
        adige.pAlpha = Double.valueOf(pAlpha);
        adige.pRs = Double.valueOf(pRs);
        adige.pRq = Double.valueOf(pRq);
        adige.pMetp = Double.valueOf(pMetp);
        adige.pMrain = Double.valueOf(pMrain);
        adige.pMelting = Double.valueOf(pMelting);
        adige.pQ0 = Double.valueOf(pQ0);
        adige.pBetanolinear = Double.valueOf(1.0D);
        adige.pmode = 1;
        adige.pDorouting = false;
        adige.pDoGeom = Boolean.valueOf(false);
        adige.inSubbasinDist = subbasin5000;
        adige.inHillslope = subbasin5000;
        adige.fNetnum = fNetnum;
        adige.fBaricenter = fBaricenter;
        adige.inHydrometers = hydrometersFC;
        adige.pPfafids = pPfafids;
        adige.fMonpointid = fMonpointid;
        adige.inNetwork = networkFC;
        adige.fPfaff = fPfaff;
        adige.fNetelevstart = fNetelevstart;
        adige.fNetelevend = fNetelevstart;
        adige.pRainintensity = -1D;
        adige.pRainduration = -1;
        adige.doLog = false;
        adige.tTimestep = timeStepMinutes;
        adige.tStart = startDate;
        adige.tEnd = endDate;
        adige.pNetNumCali = pNetNumCali;
        TimeSeriesIteratorReader reader_rain = new TimeSeriesIteratorReader();
        reader_rain.file = pathToPrainOutput;
        reader_rain.idfield = "ID";
        reader_rain.tStart = tStartDate;
        reader_rain.tEnd = tEndDate;
        reader_rain.fileNovalue = "-9999.0";
        reader_rain.tTimestep = timeStepMinutes;
        TimeSeriesIteratorReader reader_hydro = new TimeSeriesIteratorReader();
        reader_hydro.file = pathToHydrometers;
        reader_hydro.idfield = "ID";
        reader_hydro.tStart = startDate;
        reader_hydro.tEnd = endDate;
        reader_hydro.fileNovalue = "-9999";
        reader_hydro.tTimestep = timeStepMinutes;
        TimeSeriesIteratorReader reader_melting = new TimeSeriesIteratorReader();
        reader_melting.file = pathToMeltingOutput;
        reader_melting.idfield = "ID";
        reader_melting.tStart = startDate;
        reader_melting.tEnd = endDate;
        reader_melting.fileNovalue = "-9999";
        reader_melting.tTimestep = timeStepMinutes;
        TimeSeriesIteratorReader reader_et = new TimeSeriesIteratorReader();
        reader_et.file = pathToEtp;
        reader_et.idfield = "ID";
        reader_et.tStart = startDate;
        reader_et.tEnd = endDate;
        reader_et.fileNovalue = "-9999";
        reader_et.tTimestep = timeStepMinutes;
        reader_rain.initProcess();
        TimeSeriesIteratorWriter writer = new TimeSeriesIteratorWriter();
        writer.file = pathToDischargeOutput;
        writer.tStart = reader_rain.tStart;
        writer.tTimestep = reader_rain.tTimestep;
        while(reader_rain.doProcess)  {
            reader_rain.nextRecord();
            java.util.HashMap rainvalues = reader_rain.outData;
            reader_et.nextRecord();
            java.util.HashMap etvalues = reader_et.outData;
            reader_melting.nextRecord();
            java.util.HashMap meltingvalues = reader_melting.outData;
            adige.inRain = rainvalues;
            adige.inEtp = etvalues;
            adige.inMelting = meltingvalues;
            reader_hydro.nextRecord();
            adige.inHydrometerdata = reader_hydro.outData;
            adige.process();
            writer.inData = adige.outDischarge;
            writer.writeNextLine();
        }
        reader_rain.close();
        reader_et.close();
        reader_hydro.close();
        writer.close();
    }

    public String pathToDem;
    public String pathToSkyview;
    public String pathToSubBasinsCentroidsShape;
    public String pathToHydrometersShape;
    public String pathToNetworkShape;
    public String pathToSubbasinShape;
    public String tStartDate;
    public String tEndDate;
    public String pathToRainfall;
    public String pathToAirTemperature;
    public String centroidsID;
    public double pCmf;
    public double pCff;
    public double pR;
    public double pCr;
    public double pCs;
    public double pTmelt;
    public String pathToPrainOutput;
    public String pathToMeltingOutput;
    public String pathToSweOutput;
    public boolean doDaily;
    public boolean doRaster;
    public int pMode;
    public double pCmax;
    public double pB;
    public double pAlpha;
    public double pRs;
    public double pRq;
    public double pMetp;
    public double pMrain;
    public double pMelting;
    public double pQ0;
    public String pPfafids;
    public String fMonpointid;
    public String fPfaff;
    public String fNetelevstart;
    public String fNetelevend;
    public int timeStepMinutes;
    public String fNetnum;
    public String fBaricenter;
    public int pNetNumCali;
    public String pathToHydrometers;
    public String pathToEtp;
    public String pathToDischargeOutput;
}
*/